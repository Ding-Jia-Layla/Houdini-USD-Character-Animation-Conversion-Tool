#usda 1.0
(
    defaultPrim = "Model"
    endTimeCode = 10
    metersPerUnit = 0.01
    startTimeCode = 1
    upAxis = "Y"
)

def SkelRoot "Model" (
    prepend apiSchemas = ["SkelBindingAPI"]
    kind = "component"
)
{
    def Skeleton "Skel" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (0, 0, -0, 1) ), ( (1, 0, -0, 0), (-0, 1, -0, 0), (0, -0, 1, 0), (0, -0, 2, 1) ), ( (1, 0, -0, 0), (-0, 1, -0, 0), (0, -0, 1, 0), (0, -0, 4, 1) )]
        uniform token[] joints = ["arm_Shoulder", "arm_Shoulder/arm_Elbow", "arm_Shoulder/arm_Elbow/arm_Hand"]
        uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (-0, 1, 0, 0), (0, -0, 1, 0), (0, 0, -0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -0, 2, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 2, 1) )]
        rel skel:animationSource = </Model/Skel/Anim>

        def SkelAnimation "Anim"
        {
            uniform token[] joints = ["arm_Shoulder", "arm_Shoulder/arm_Elbow", "arm_Shoulder/arm_Elbow/arm_Hand"]
            quatf[] rotations.timeSamples = {
                1: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
                2: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
                3: [(1, 0, 0, 0), (0.9999499, 0.010006262, 0, 0), (0.9999499, 0.010006262, 0, 0)],
                4: [(1, 0, 0, 0), (0.9986943, 0.0510786, 0, 0), (0.9986943, 0.0510786, 0, 0)],
                5: [(1, 0, 0, 0), (0.9930636, 0.11757212, 0, 0), (0.9930636, 0.11757212, 0, 0)],
                6: [(1, 0, 0, 0), (0.97933996, 0.2022144, 0, 0), (0.97933996, 0.2022144, 0, 0)],
                7: [(1, 0, 0, 0), (0.9548, 0.2972421, 0, 0), (0.9548, 0.2972421, 0, 0)],
                8: [(1, 0, 0, 0), (0.9187922, 0.39473417, 0, 0), (0.9187922, 0.39473417, 0, 0)],
                9: [(1, 0, 0, 0), (0.8732636, 0.4872397, 0, 0), (0.8732636, 0.4872397, 0, 0)],
                10: [(1, 0, 0, 0), (0.822708, 0.56845456, 0, 0), (0.822708, 0.56845456, 0, 0)],
            }
            half3[] scales.timeSamples = {
                1: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                2: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                3: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                4: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                5: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                6: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                7: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                8: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                9: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
                10: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
            }
            float3[] translations.timeSamples = {
                1: [(0, 0, 0), (0, 0, 2), (0, 0, 4)],
                2: [(0, 0, 0), (0, 0, 2), (0, 0, 4)],
                3: [(0, 0, 0), (0, 0, 2), (0, -0.04002304, 3.999599)],
                4: [(0, 0, 0), (0, 0, 2), (0, -0.20404764, 3.9895613)],
                5: [(0, 0, 0), (0, 0, 2), (0, -0.46702638, 3.9447014)],
                6: [(0, 0, 0), (0, 0, 2), (0, -0.79214656, 3.836427)],
                7: [(0, 0, 0), (0, 0, 2), (0, -1.1352271, 3.6465724)],
                8: [(0, 0, 0), (0, 0, 2), (0, -1.4507147, 3.3767161)],
                9: [(0, 0, 0), (0, 0, 2), (0, -1.7019547, 3.0503573)],
                10: [(0, 0, 0), (0, 0, 2), (0, -1.8706884, 2.707394)],
            }
        }
    }

    def Mesh "Arm" (
        prepend apiSchemas = ["SkelBindingAPI"]
    )
    {
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [3, 1, 0, 2, 7, 5, 4, 6, 9, 7, 6, 8, 2, 9, 8, 3, 11, 4, 5, 10, 1, 11, 10, 0, 9, 10, 5, 7, 2, 0, 10, 9, 8, 11, 1, 3, 6, 4, 11, 8]
        uniform token orientation = "leftHanded"
        point3f[] points = [(0.5, -0.5, 4), (-0.5, -0.5, 4), (0.5, 0.5, 4), (-0.5, 0.5, 4), (-0.5, -0.5, 0), (0.5, -0.5, 0), (-0.5, 0.5, 0), (0.5, 0.5, 0), (-0.5, 0.5, 2), (0.5, 0.5, 2), (0.5, -0.5, 2), (-0.5, -0.5, 2)]
        matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [2, 2, 2, 2, 0, 0, 0, 0, 1, 1, 1, 1] (
            elementSize = 1
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] (
            elementSize = 1
            interpolation = "vertex"
        )
        rel skel:skeleton = </Model/Skel>
        uniform token subdivisionScheme = "none"
    }
}

